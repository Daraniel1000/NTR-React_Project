[{"/home/waluigi/Documents/NTR/ntr-react/src/index.js":"1","/home/waluigi/Documents/NTR/ntr-react/src/App.js":"2","/home/waluigi/Documents/NTR/ntr-react/src/reportWebVitals.js":"3"},{"size":500,"mtime":1608036049524,"results":"4","hashOfConfig":"5"},{"size":9283,"mtime":1608309818152,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608036049524,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"e26c2s",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/waluigi/Documents/NTR/ntr-react/src/index.js",[],["16","17"],"/home/waluigi/Documents/NTR/ntr-react/src/App.js",["18","19","20"],"import './App.css';\nimport { useState, Component, useEffect } from 'react';\n\nfunction App() {\n  const [state, setState] = useState({ view: \"4\", group: \"1a\", teacher: 0, data:undefined });\n  function changeView(e) {\n    setState(st => st = { view: e.target.id, group: state.group, teacher: state.teacher, data:state.data });\n  }\n  useEffect(()=>{\n    console.log(state);\n    if(state.data === undefined)\n    {\n      fetch('http://localhost:3004/data')\n        .then(res => res.json())\n        .then((data) => {\n          setState({ view: \"1\", group: \"1a\", teacher: 0, data:data })\n        })\n        .catch(console.log)\n    }\n    else\n    {\n      const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/JSON' },\n        body: JSON.stringify(state.data)\n    };\n    fetch('http://localhost:3004/data', requestOptions)\n        .then(response => response.json())\n        .then(data => console.log(data));\n    }\n  })\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"btn-row\">\n          <button className=\"btn btn-white\" id=\"1\" onClick={changeView}>Plan lekcji</button>\n          <button className=\"btn btn-white\" id=\"2\" onClick={changeView}>Nauczyciele</button>\n        </div>\n        {renderView(state, setState)}\n      </header>\n    </div>\n  );\n}\n\nfunction renderView(state, setState) {\n  switch (state.view) {\n    default:\n      return (\n        <div>\n          {renderMain(state, setState)}\n        </div>\n      )\n    case \"2\":\n      return (\n        <div>\n          {renderTeachers(state, setState)}\n        </div>\n      )\n    case \"3\":\n      return (\n        <div>\n          {renderSlot(state, setState)}\n        </div>\n      )\n      case \"4\":\n        return(\n          <h2>Ładowanie danych...</h2>\n        )\n  }\n}\n\nfunction groupFree(group, slot, activities) {\n  let ret = true;\n  activities.forEach(element => {\n    if (element.slot === slot && element.group === group) {\n      ret = false;\n    }\n  })\n  return ret;\n}\nfunction roomFree(room, slot, activities) {\n  let ret = true;\n  activities.forEach(element => {\n    if (element.slot === slot && element.room === room) {\n      ret = false;\n    }\n  })\n  return ret;\n}\nfunction teacherFree(teacher, slot, activities) {\n  let ret = true;\n  activities.forEach(element => {\n    if (element.slot === slot && element.teacher === teacher) {\n      ret = false;\n    }\n  })\n  return ret;\n}\n\nfunction renderSlot(state, setState) {\n  function saveSlot(e) {\n    let subject = document.getElementById(\"class\").value;\n    let group = document.getElementById(\"group\").value;\n    let room = document.getElementById(\"room\").value;\n    let teacher = document.getElementById(\"teacher\").value;\n    let activity = { room: room, group: group, class: subject, slot: state.slot, teacher: teacher };\n    let d = state.data;\n    d.activities.push(activity);\n    setState(st => st = { view: \"1\", group: state.group, teacher: state.teacher, data:d })\n  }\n  let slot = null;\n  state.data.activities.forEach(element => {\n    if (element[\"slot\"] == state.slot && element[\"group\"] === state.group) {\n      slot = element;\n    }\n  });\n  if (slot === null) {\n    slot = { class: state.data.classes[0], group: state.group, room: state.data.rooms[0], slot: Number(state.slot), teacher: state.data.teachers[0] };\n  }\n  let grouplist = [], roomlist = [], teachlist = [];\n  state.data.groups.forEach(element => {\n    if (element === slot.group) {\n      grouplist.push(element);\n    }\n    else {\n      if (groupFree(element, slot.slot, state.data.activities)) {\n        grouplist.push(element);\n      }\n    }\n  })\n  state.data.teachers.forEach(element => {\n    if (element === slot.teacher) {\n      teachlist.push(element);\n    }\n    else {\n      if (teacherFree(element, slot.slot, state.data.activities)) {\n        teachlist.push(element);\n      }\n    }\n  })\n  state.data.rooms.forEach(element => {\n    if (element === slot.room) {\n      roomlist.push(element);\n    }\n    else {\n      if (roomFree(element, slot.slot, state.data.activities)) {\n        roomlist.push(element);\n      }\n    }\n  })\n  return (\n    <div>\n      <select defaultValue={slot.class} id=\"class\" className=\"form-control w-100\">\n        {state.data.classes.map(val => {\n          return (<option>{val}</option>)\n        })}\n      </select>\n      <select id=\"group\" className=\"form-control w-100\" defaultValue={slot.group}>\n        {grouplist.map(val=>{\n          return (<option>{val}</option>)\n        })}\n      </select>\n      <select id=\"room\" className=\"form-control w-100\" defaultValue={slot.room}>\n        {roomlist.map(val => {\n          return (<option>{val}</option>)\n        })}\n      </select>\n      <select id=\"teacher\" className=\"form-control w-100\" defaultValue={slot.teacher}>\n        {teachlist.map(val => {\n          return (<option>{val}</option>)\n        })}\n      </select>\n      <button className=\"btn btn-primary\" onClick={saveSlot}>Zapisz</button>\n    </div>\n  )\n}\n\nfunction renderTeachers(state, setState) {\n  function changeTeacher(e) {\n    setState(state => state = { view: state.view, teacher: e.target.selectedIndex, group: state.group, data:state.data });\n  }\n  function editTeacher(e) {\n    state.data.activities.forEach(activity=>{\n      if(activity.teacher === state.data.teachers[state.teacher]){\n        activity.teacher = e.target.value;\n      }\n    })\n    state.data.teachers[state.teacher] = e.target.value;\n    setState(st => st = { view: state.view, teacher: state.teacher, group: state.group, refresh: true, data:state.data });\n  }\n  function removeTeacher(e) {\n    let teach = state.data.teachers[state.teacher]\n    state.data.teachers.splice(state.teacher, 1);\n    let d = state.data\n    d.activities.forEach((activity, idx)=>{\n      if(activity.teacher === teach){\n        d.activities.splice(idx, 1);\n      }\n    })\n    if (state.teacher >= d.teachers.length) {\n      setState(st => st = { view: state.view, teacher: 0, group: state.group, refresh: true, data:d });\n    }\n    else {\n      setState(st => st = { view: state.view, teacher: state.teacher, group: state.group, refresh: true, data:d });\n    }\n  }\n  function addTeacher(e) {\n    let s = document.getElementById(\"addName\");\n    let d = state.data;\n    d.teachers.push(s.value);\n    s.value = \"\";\n    setState(st => st = { view: state.view, teacher: state.teacher, group: state.group, refresh: true, data:d });\n  }\n  return (\n    <div>\n      <div>\n        <select id=\"chooseTeacher\" className=\"form-control w-100\" onChange={changeTeacher} value={state.data.teachers[state.teacher]}>\n          {state.data.teachers.map((val) =>\n            <option>{val}</option>)}\n        </select>\n        <input type=\"text\" value={state.data.teachers[state.teacher]} onChange={editTeacher} />\n        <button onClick={removeTeacher} className=\"btn btn-danger\">usuń</button>\n      </div>\n      <div>\n        <input type=\"text\" id=\"addName\" />\n        <button onClick={addTeacher} className=\"btn btn-primary\">dodaj</button>\n      </div>\n    </div>\n  )\n}\n\nfunction renderMain(state, setState) {\n  function changeGroup(e) {\n    setState(st => st = { view: state.view, teacher: state.teacher, group: e.target.value, data:state.data });\n  }\n  function editSlot(e) {\n    setState(st => st = { view: \"3\", teacher: state.teacher, group: state.group, slot: e.target.id, data:state.data });\n  }\n  let topRow = [\"Godzina\", \"Pon\", \"Wt\", \"Śr\", \"Czw\", \"Pt\"];\n  let activitylist = {};\n  state.data.groups.forEach(element => {\n    activitylist[element] = [];\n  });\n  state.data.activities.forEach(element => {\n    activitylist[element[\"group\"]][element[\"slot\"]] = element[\"room\"] + \" \" + element[\"class\"];\n  });\n  return (\n    <div>\n      <select id=\"chooseClass\" className=\"form-control w-25\" onChange={changeGroup} value={state.group}>\n        {state.data.groups.map((val) => {\n          return(<option>{val}</option>)\n        })}\n      </select>\n      <div >\n        <div className=\"btn-row\">\n          {topRow.map(element =>\n            <button className=\"text\" itemType=\"button\">{element}</button>)}\n        </div>\n        <div id=\"items\">\n          {getSlots(activitylist, state.group, editSlot)}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nfunction getSlots(activitylist, group, editSlot) {\n  let arr = [1, 2, 3, 4, 5];\n  let hours = [\"8:00-8:45\", \"8:55-9:40\", \"9:50-11:35\", \"11:55:12:40\", \"12:50:13:35\", \"13:45:14:30\", \"14:40-15:25\",\n    \"15:35-16:20\", \"16:30-17:15\"];\n  let list = []\n  let it = -5;\n  if (typeof (group) != 'string') {\n    list = activitylist[\"1a\"];\n  }\n  else {\n    list = activitylist[group];\n  }\n  return (\n    <div>\n      { hours.map((item) => {\n        it += 5;\n        return (\n          <div className=\"btn-row\">\n            <button className=\"text\" itemType=\"button\">{item}</button>\n            {arr.map((val) => {\n              return getSlot(val, list, it, editSlot);\n            })}\n          </div>)\n      })}\n    </div>\n  )\n}\n\nfunction getSlot(slot, items, it, editSlot) {\n  if (items[slot + it] == undefined) {\n    return (\n      <button itemType=\"button\" className=\"slot\" id={slot + it} onClick={editSlot}>.</button>\n    )\n  }\n  else {\n    return (\n      <button itemType=\"button\" className=\"slot\" id={slot + it} onClick={editSlot}>{items[slot + it]}</button>\n    )\n  }\n}\n\nexport default App;\n","/home/waluigi/Documents/NTR/ntr-react/src/reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":2,"column":20,"nodeType":"27","messageId":"28","endLine":2,"endColumn":29},{"ruleId":"29","severity":1,"message":"30","line":113,"column":25,"nodeType":"31","messageId":"32","endLine":113,"endColumn":27},{"ruleId":"29","severity":1,"message":"30","line":297,"column":24,"nodeType":"31","messageId":"32","endLine":297,"endColumn":26},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]